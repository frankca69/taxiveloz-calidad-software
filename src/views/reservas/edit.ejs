<div class="container mt-5">
    <h2>Editar Reserva</h2>

    <% if (typeof error !== 'undefined' && error) { %>
        <div class="alert alert-danger" role="alert">
            <%= error %>
        </div>
    <% } %>

    <% if (typeof reserva === 'undefined' || !reserva) { %>
        <div class="alert alert-warning" role="alert">
            No se pudieron cargar los datos de la reserva para editar.
        </div>
    <% } else { %>
        <form action="/reservas/edit/<%= reserva.id_reserva %>" method="POST">
             <%
                let fechaFormateada = '';
                if (reserva.fecha) {
                    const d = new Date(reserva.fecha);
                    const offset = d.getTimezoneOffset();
                    const dCorrected = new Date(d.getTime() - (offset*60*1000));
                    fechaFormateada = dCorrected.toISOString().split('T')[0];
                }
                const horaInicioFormateada = reserva.hora_inicio ? reserva.hora_inicio.substring(0,5) : '';
                const horaFinFormateada = reserva.hora_fin ? reserva.hora_fin.substring(0,5) : '';
            %>
            <div class="row">
                <div class="col-md-4 mb-3">
                    <label for="fecha" class="form-label">Fecha*</label>
                    <input type="date" class="form-control" id="fecha" name="fecha" value="<%= fechaFormateada %>" required>
                </div>
                <div class="col-md-4 mb-3">
                    <label for="hora_inicio" class="form-label">Hora de Inicio*</label>
                    <input type="time" class="form-control" id="hora_inicio" name="hora_inicio" value="<%= horaInicioFormateada %>" required>
                </div>
                <div class="col-md-4 mb-3">
                    <label for="hora_fin" class="form-label">Hora de Fin*</label>
                    <div class="input-group">
                        <input type="time" class="form-control" id="hora_fin" name="hora_fin" value="<%= horaFinFormateada %>" required>
                        <button type="button" id="sugerir_hora_fin_btn_edit" class="btn btn-outline-secondary btn-sm" title="Sugerir hora fin basada en duración del viaje + 30min tolerancia">Sugerir</button>
                    </div>
                </div>
            </div>

            <div class="mb-3">
                <label for="chofer_id" class="form-label">Chofer y Vehículo*</label>
                <select class="form-select" id="chofer_id" name="chofer_id" required>
                    <option value="">Seleccione fecha y horas para ver choferes disponibles</option>
                     <% if (typeof choferes !== 'undefined' && choferes.length > 0) { %>
                        <% choferes.forEach(chofer => { %>
                            <option value="<%= chofer.id %>" <%= (reserva.id_chofer == chofer.id) ? 'selected' : '' %>>
                                <%= chofer.display_name %>
                            </option>
                        <% }); %>
                    <% } %>
                </select>
                <div id="chofer_loading" style="display: none;">Consultando disponibilidad...</div>
            </div>

            <div class="mb-3">
                <label for="cliente_id" class="form-label">Cliente*</label>
                <select class="form-select" id="cliente_id" name="cliente_id" required>
                    <option value="">Seleccione un cliente</option>
                    <% clientes.forEach(cliente => { %>
                        <option value="<%= cliente.id %>" <%= (reserva.id_cliente == cliente.id) ? 'selected' : '' %>>
                            <%= cliente.display_name %>
                        </option>
                    <% }); %>
                </select>
            </div>

            <div class="row">
                <div class="col-md-6 mb-3">
                    <label for="origen" class="form-label">Origen*</label>
                    <input type="text" class="form-control" id="origen" name="origen" value="<%= reserva.origen || '' %>" required>
                </div>

                <div class="col-md-6 mb-3">
                    <label for="destino" class="form-label">Destino*</label>
                    <input type="text" class="form-control" id="destino" name="destino" value="<%= reserva.destino || '' %>" required>
                </div>
            </div>

            <div id="map" style="height: 400px; width: 100%; margin-bottom: 1rem;"></div>

            <div class="row">
                <div class="col-md-4 mb-3">
                    <div id="distancia" class="mb-1">
                        <% if (reserva.distancia_km) { %>
                            <strong>Distancia:</strong> <%= reserva.distancia_km %> km
                        <% } %>
                    </div>
                    <input type="hidden" name="distancia_km" id="distancia_km_hidden" value="<%= reserva.distancia_km || '' %>">
                </div>
                <div class="col-md-4 mb-3">
                    <div id="duracion_viaje_edit" class="mb-1">
                        <% /* Se llenará con JS si se calcula nueva ruta */ %>
                    </div>
                </div>
                <div class="col-md-4 mb-3">
                    <label for="tarifa" class="form-label">Tarifa Calculada (S/)</label>
                    <input type="number" step="0.01" class="form-control" id="tarifa" name="tarifa" value="<%= reserva.tarifa %>" readonly required>
                </div>
            </div>

            <div class="mb-3">
                <label for="tipo_pago" class="form-label">Tipo de Pago*</label>
                <select class="form-select" id="tipo_pago" name="tipo_pago" required>
                    <option value="">Seleccione un tipo de pago</option>
                    <option value="efectivo" <%= (reserva.tipo_pago === 'efectivo') ? 'selected' : '' %>>Efectivo</option>
                    <option value="virtual" <%= (reserva.tipo_pago === 'virtual') ? 'selected' : '' %>>Virtual</option>
                </select>
            </div>

            <div class="mb-3">
                <label for="estado" class="form-label">Estado</label>
                <select class="form-select" id="estado" name="estado">
                    <option value="espera" <%= (reserva.estado_reserva === 'espera') ? 'selected' : '' %>>Espera</option>
                    <option value="confirmada" <%= (reserva.estado_reserva === 'confirmada') ? 'selected' : '' %>>Confirmada</option>
                    <option value="notificada" <%= (reserva.estado_reserva === 'notificada') ? 'selected' : '' %>>Notificada</option>
                    <option value="finalizada" <%= (reserva.estado_reserva === 'finalizada') ? 'selected' : '' %>>Finalizada</option>
                    <option value="cancelada" <%= (reserva.estado_reserva === 'cancelada') ? 'selected' : '' %>>Cancelada</option>
                    <!-- No se incluye 'eliminada' como opción seleccionable en edición normal -->
                </select>
            </div>

            <button type="submit" class="btn btn-primary">Actualizar Reserva</button>
            <a href="/reservas" class="btn btn-secondary">Cancelar</a>
        </form>
    <% } %>
</div>

<script>
document.addEventListener('DOMContentLoaded', function () {
    // Definiciones de elementos del DOM al principio
    const fechaInput = document.getElementById('fecha');
    const horaInicioInput = document.getElementById('hora_inicio');
    const horaFinInput = document.getElementById('hora_fin');
    const choferSelect = document.getElementById('chofer_id');
    const choferLoadingDiv = document.getElementById('chofer_loading');
    const currentReservaId = "<%= (typeof reserva !== 'undefined' && reserva.id_reserva) ? reserva.id_reserva : '' %>";
    const initialChoferId = "<%= (typeof reserva !== 'undefined' && reserva.id_chofer) ? reserva.id_chofer : '' %>";

    const origenInput = document.getElementById('origen');
    const destinoInput = document.getElementById('destino');
    const distanciaDiv = document.getElementById('distancia');
    const distanciaHiddenInput = document.getElementById('distancia_km_hidden');
    const tarifaInput = document.getElementById('tarifa');
    const duracionViajeDivEdit = document.getElementById('duracion_viaje_edit');
    const sugerirHoraFinBtnEdit = document.getElementById('sugerir_hora_fin_btn_edit');

    let currentTravelDurationSecondsEdit = 0;
    let map;
    let directionsService;
    let directionsRenderer;
    let autocompleteOrigen;
    let autocompleteDestino;

    if (sugerirHoraFinBtnEdit) {
        sugerirHoraFinBtnEdit.disabled = true;
        sugerirHoraFinBtnEdit.addEventListener('click', function() {
            if (!horaInicioInput.value || currentTravelDurationSecondsEdit === 0) {
                alert('Por favor, seleccione una hora de inicio y calcule una ruta primero.');
                return;
            }
            const [hoursInicio, minutesInicio] = horaInicioInput.value.split(':').map(Number);
            const fechaInicio = new Date();
            fechaInicio.setHours(hoursInicio, minutesInicio, 0, 0);
            const toleranciaSegundos = 30 * 60;
            const fechaFinCalculada = new Date(fechaInicio.getTime() + (currentTravelDurationSecondsEdit + toleranciaSegundos) * 1000);
            const hoursFin = fechaFinCalculada.getHours().toString().padStart(2, '0');
            const minutesFin = fechaFinCalculada.getMinutes().toString().padStart(2, '0');
            horaFinInput.value = `${hoursFin}:${minutesFin}`;
        });
    }

    function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
            center: { lat: -12.046374, lng: -77.042793 },
            zoom: 12
        });
        directionsService = new google.maps.DirectionsService();
        directionsRenderer = new google.maps.DirectionsRenderer();
        directionsRenderer.setMap(map);
        const autocompleteOptions = {};
        autocompleteOrigen = new google.maps.places.Autocomplete(origenInput, autocompleteOptions);
        autocompleteDestino = new google.maps.places.Autocomplete(destinoInput, autocompleteOptions);
        autocompleteOrigen.addListener('place_changed', calculateAndDisplayRoute);
        autocompleteDestino.addListener('place_changed', calculateAndDisplayRoute);
        if (origenInput.value && destinoInput.value) {
            calculateAndDisplayRoute();
        }
    }

    function calculateAndDisplayRoute() {
        const origen = origenInput.value;
        const destino = destinoInput.value;
        if (origen && destino) {
            directionsService.route(
                { origin: origen, destination: destino, travelMode: google.maps.TravelMode.DRIVING },
                (response, status) => {
                    if (status === 'OK') {
                        directionsRenderer.setDirections(response);
                        const leg = response.routes[0].legs[0];
                        if (leg.distance && leg.duration) {
                            const distanciaKm = parseFloat((leg.distance.value / 1000).toFixed(2));
                            distanciaDiv.innerHTML = `<strong>Distancia:</strong> ${distanciaKm} km`;
                            distanciaHiddenInput.value = distanciaKm;
                            tarifaInput.value = calcularTarifaReserva(distanciaKm).toFixed(2);
                            currentTravelDurationSecondsEdit = leg.duration.value;
                            if(duracionViajeDivEdit) duracionViajeDivEdit.innerHTML = `<strong>Duración viaje:</strong> ${leg.duration.text}`;
                            if (sugerirHoraFinBtnEdit) sugerirHoraFinBtnEdit.disabled = false;
                        } else {
                            distanciaDiv.innerHTML = 'No se pudo calcular distancia/duración.';
                            if(duracionViajeDivEdit) duracionViajeDivEdit.innerHTML = '';
                            distanciaHiddenInput.value = '';
                            currentTravelDurationSecondsEdit = 0;
                            tarifaInput.value = calcularTarifaReserva(0).toFixed(2);
                            if (sugerirHoraFinBtnEdit) sugerirHoraFinBtnEdit.disabled = true;
                        }
                    } else {
                        distanciaDiv.innerHTML = 'No se pudo calcular la ruta: ' + status;
                        if(duracionViajeDivEdit) duracionViajeDivEdit.innerHTML = '';
                        distanciaHiddenInput.value = '';
                        currentTravelDurationSecondsEdit = 0;
                        tarifaInput.value = calcularTarifaReserva(0).toFixed(2);
                        if (sugerirHoraFinBtnEdit) sugerirHoraFinBtnEdit.disabled = true;
                    }
                }
            );
        } else {
            distanciaDiv.innerHTML = '';
            if(duracionViajeDivEdit) duracionViajeDivEdit.innerHTML = '';
            distanciaHiddenInput.value = '';
            currentTravelDurationSecondsEdit = 0;
            tarifaInput.value = calcularTarifaReserva(0).toFixed(2);
            if (sugerirHoraFinBtnEdit) sugerirHoraFinBtnEdit.disabled = true;
        }
    }

    if (typeof google !== 'undefined' && typeof google.maps !== 'undefined') {
        initMap();
    } else {
        console.warn("Google Maps API might not be loaded yet for edit.ejs. Consider callback.");
        setTimeout(() => {
            if (typeof google !== 'undefined' && typeof google.maps !== 'undefined') {
                initMap();
            } else {
                console.error("Google Maps API failed to load for edit.ejs.");
                if(distanciaDiv) distanciaDiv.innerHTML = "Error al cargar Google Maps API.";
            }
        }, 1000);
    }

    function fetchChoferesDisponibles() {
        const fecha = fechaInput.value;
        const horaInicio = horaInicioInput.value;
        const horaFin = horaFinInput.value;

        if (fecha && horaInicio && horaFin) {
            choferSelect.disabled = true;
            choferSelect.innerHTML = '<option value="">Cargando choferes...</option>';
            choferLoadingDiv.style.display = 'block';

            if (horaFin <= horaInicio) {
                choferSelect.innerHTML = '<option value="">Hora de fin debe ser posterior a hora de inicio</option>';
                choferLoadingDiv.style.display = 'none';
                return;
            }

            const queryParams = new URLSearchParams({
                fecha,
                hora_inicio: horaInicio,
                hora_fin: horaFin,
            });
            if (currentReservaId) {
                queryParams.append('reserva_id_actual', currentReservaId);
            }

            fetch(`/choferes/disponibles?${queryParams.toString()}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`Error HTTP: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    choferSelect.innerHTML = '';
                    let initialChoferStillAvailable = false;
                    if (data.choferes && data.choferes.length > 0) {
                        choferSelect.appendChild(new Option('Seleccione un chofer y vehículo', ''));
                        data.choferes.forEach(chofer => {
                            const option = new Option(chofer.display_name, chofer.id);
                            choferSelect.appendChild(option);
                            if (chofer.id.toString() === initialChoferId) {
                                initialChoferStillAvailable = true;
                            }
                        });
                        if (initialChoferStillAvailable) {
                            choferSelect.value = initialChoferId;
                        }
                        choferSelect.disabled = false;
                    } else {
                        choferSelect.appendChild(new Option('No hay choferes disponibles para este horario', ''));
                    }
                })
                .catch(error => {
                    console.error('Error al cargar choferes:', error);
                    choferSelect.innerHTML = '<option value="">Error al cargar choferes</option>';
                })
                .finally(() => {
                    choferLoadingDiv.style.display = 'none';
                });
        } else {
            choferSelect.disabled = true;
            choferSelect.innerHTML = '<option value="">Seleccione fecha y horas para ver choferes disponibles</option>';
        }
    }

    fechaInput.addEventListener('change', fetchChoferesDisponibles);
    horaInicioInput.addEventListener('change', fetchChoferesDisponibles);
    horaFinInput.addEventListener('change', fetchChoferesDisponibles);

    if (fechaInput.value && horaInicioInput.value && horaFinInput.value) {
        fetchChoferesDisponibles();
    } else {
        if (initialChoferId && choferSelect.options.length <=1) {
             const originalChoferOption = Array.from(choferSelect.options).find(opt => opt.value === initialChoferId);
             if(originalChoferOption){
                choferSelect.value = initialChoferId;
             }
        }
         choferSelect.disabled = true;
    }
});
</script>
